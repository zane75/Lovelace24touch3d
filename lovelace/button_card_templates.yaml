  #LIGHT
  light:
    variables:
      circle_input: >
        [[[ return Math.round(entity.attributes.brightness / 2.54); ]]]
    double_tap_action:
      action: fire-dom-event
      browser_mod:
        command: popup
        title: >
          [[[ return entity.attributes.friendly_name ]]]
        card:
          type: entities
          entities:
            - type: custom:light-popup-card
              entity: >
                [[[ return entity.entity_id ]]]
              icon: none
              fullscreen: false
              brightnessWidth: 130px
              brightnessHeight: 360px
              borderRadius: 1.7em
              sliderColor: '#c7c7c7'
              sliderTrackColor: rgba(25, 25, 25, 0.9)
            - type: custom:hui-element
              card_type: horizontal-stack
              card_mod:
                style: >
                  #root {
                    justify-content: center;
                    margin-top: 2em;
                  }
              cards:
                - type: custom:button-card
                  styles:
                    card:
                      - background: '#d8d9e1'
                  tap_action:
                    action: call-service
                    service: light.turn_on
                    service_data:
                      entity_id: >
                        [[[ return entity.entity_id ]]]
                      color_temp: 153
                  template: color_light
                - type: custom:button-card
                  styles:
                    card:
                      - background: '#d5b08d'
                  tap_action:
                    action: call-service
                    service: light.turn_on
                    service_data:
                      entity_id: >
                        [[[ return entity.entity_id ]]]
                      color_temp: 326
                  template: color_light
            - type: custom:hui-element
              card_type: horizontal-stack
              card_mod:
                style: >
                  #root {
                    justify-content: center;
                    margin-bottom: 1em;
                  }
              cards:
                - type: custom:button-card
                  styles:
                    card: 
                      - background: '#ce944b'
                  tap_action:
                    action: call-service
                    service: light.turn_on
                    service_data:
                      entity_id: >
                        [[[ return entity.entity_id ]]]
                      color_temp: 500
                  template: color_light
                - type: custom:button-card
                  styles:
                    card:
                      [background: 'radial-gradient(circle, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 0) 80%), 
                      conic-gradient(rgb(120, 39, 230), rgb(230, 34, 231), rgb(228, 5, 136), rgb(228, 25, 25), 
                      rgb(229, 105, 30), rgb(232, 226, 46), rgb(125, 230, 41), rgb(52, 232, 40), rgb(51, 231, 92), 
                      rgb(52, 232, 224), rgb(32, 125, 229), rgb(18, 39, 229), rgb(120, 39, 230))']
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      command: popup
                      title: >
                        [[[ return entity.attributes.friendly_name ]]]
                      card:
                        type: custom:light-entity-card
                        entity: >
                          [[[ return entity.entity_id ]]]
                        brightness: true
                        color_temp: true
                        full_width_sliders: false
                        hide_header: true
                        show_slider_percent: true
                        smooth_color_wheel: true
                        persist_features: true
                        consolidate_entities: true
                  template: color_light

  light2:
    template:
      - base
      - circle
    variables:
      circle_input: >
        [[[ return Math.round(entity.attributes.brightness / 2.54); ]]]
    hold_action:
      action: fire-dom-event
      browser_mod:
        command: popup
        title: >
          [[[ return entity.attributes.friendly_name ]]]
        card:
          type: entities
          entities:
            - type: custom:light-popup-card
              entity: >
                [[[ return entity.entity_id ]]]
              icon: none
              fullscreen: false
              brightnessWidth: 130px
              brightnessHeight: 360px
              borderRadius: 1.7em
              sliderColor: '#c7c7c7'
              sliderTrackColor: rgba(25, 25, 25, 0.9)
            - type: custom:hui-element
              card_type: horizontal-stack
              card_mod:
                style: >
                  #root {
                    justify-content: center;
                    margin-top: 2em;
                  }
              cards:
                - type: custom:button-card
                  styles:
                    card:
                      - background: '#d8d9e1'
                  tap_action:
                    action: call-service
                    service: light.turn_on
                    service_data:
                      entity_id: >
                        [[[ return entity.entity_id ]]]
                      color_temp: 153
                  template: color_light
                - type: custom:button-card
                  styles:
                    card:
                      - background: '#d5b08d'
                  tap_action:
                    action: call-service
                    service: light.turn_on
                    service_data:
                      entity_id: >
                        [[[ return entity.entity_id ]]]
                      color_temp: 326
                  template: color_light
            - type: custom:hui-element
              card_type: horizontal-stack
              card_mod:
                style: >
                  #root {
                    justify-content: center;
                    margin-bottom: 1em;
                  }
              cards:
                - type: custom:button-card
                  styles:
                    card: 
                      - background: '#ce944b'
                  tap_action:
                    action: call-service
                    service: light.turn_on
                    service_data:
                      entity_id: >
                        [[[ return entity.entity_id ]]]
                      color_temp: 500
                  template: color_light
                - type: custom:button-card
                  styles:
                    card:
                      [background: 'radial-gradient(circle, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 0) 80%), 
                      conic-gradient(rgb(120, 39, 230), rgb(230, 34, 231), rgb(228, 5, 136), rgb(228, 25, 25), 
                      rgb(229, 105, 30), rgb(232, 226, 46), rgb(125, 230, 41), rgb(52, 232, 40), rgb(51, 231, 92), 
                      rgb(52, 232, 224), rgb(32, 125, 229), rgb(18, 39, 229), rgb(120, 39, 230))']
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      command: popup
                      title: >
                        [[[ return entity.attributes.friendly_name ]]]
                      card:
                        type: custom:light-entity-card
                        entity: >
                          [[[ return entity.entity_id ]]]
                        brightness: true
                        color_temp: true
                        full_width_sliders: false
                        hide_header: true
                        show_slider_percent: true
                        smooth_color_wheel: true
                        persist_features: true
                        consolidate_entities: true
                  template: color_light  

##########icone
  icon_int:
    color: auto
    show_state: false
    show_name: false
    show_label: true     
    styles:
      card:
        - border-radius: 50px
        - width: 50px         
        - height: 50px
        - margin: 0px 0px 0px 0px
        - background-color: rgba(123, 123, 123, 0.9)
      icon:
        - height: 30px
        - width: 30px
    state:
      - value: 'on'
        styles:
          card:
            - '--paper-card-background-color': 'rgba(40, 40, 40)'
            - box-shadow: 0px 0px 60px 5px var(--button-card-light-color)
      - value: 'off'
        styles:
          card:
            - color: 'rgba(123, 123, 123, 4.7)'
            - background-color: 'rgba(123, 123, 123, 0.9)'      


  icon_hue:
    styles:
      custom_fields:
        icon_hue:
          - top: 11%
          - left: 4.5%
          - width: 3.05vw
          - position: absolute
    custom_fields:
      icon_hue: >
        [[[
          const state = entity.state === 'on' ? 'animate' : null;
          return `
            <svg viewBox="0 0 50 50">
              <style>
                @keyframes animate {
                  0% {
                    transform: scale(0.85);
                  }
                  20% {
                    transform: scale(1.1);
                  }
                  40% {
                    transform: scale(0.95);
                  }
                  60% {
                    transform: scale(1.03);
                  }
                  80% {
                    transform: scale(0.97);
                  }
                  100% {
                    transform: scale(1);
                  }
                }
                .animate {
                  animation: animate 0.8s;
                  transform-origin: center;
                }
              </style>
              <path fill="#9da0a2" d="M27.4 47.3h-4.9s-.7.1-.7.8.4.9.7.9h4.9c.3 0 .7-.1.7-.9s-.7-.8-.7-.8zm3.3-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-3H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9s-.9-.8-.9-.8zm5.2-23.2c-3.3-5.3-7-5.6-10.9-5.6-3.8 0-8.4.4-10.9 5.6-.1.1-.1.3.1.7.4.8 3.3 7.2 3.2 18.8 0 1.1-.1 1.6 0 1.7 0 .1 0 .7 1.1.7h13c1 0 1-.5 1.1-.7v-1.7c-.1-11.6 2.8-18 3.2-18.8.1-.4.1-.5.1-.7"/>
              <path class="${state}" fill="var(--button-card-light-color-no-temperature)" d="M14.1 15.3c3.4-.3 7-.4 10.9-.4 3.8 0 7.5.2 10.9.4.4-.4.7-.8.9-1.1C39 8.5 38.9 6.5 38.9 6c-.2-4.4-8.4-5-12.1-5h0-3.4c-3.7 0-12 .5-12.1 5 0 .5-.1 2.5 2.1 8.2 0 .3.3.8.7 1.1z"/>
            </svg>
          `;
        ]]]

##########termperature ed umidita
  tu_salotto:
    styles:
      card:
        - height: 40px
        - width: 100px
        - background-color: 'rgba(0,0,0,0.0)'
        - border-radius: 5%
        - padding: 5%
        - color: ivory
        - font-size: 10px
        - text-shadow: 10px 10px 12px black
        - text-transform: capitalize
      grid:
        - grid-template-areas: '" stato temperatura" "stato umidita"'
        - grid-template-columns: 4fr 9fr 1fr
        - grid-template-rows: 1fr 1fr
      name:
        - font-weight: bold
        - font-size: 10px
        - color: white
        - align-self: middle
        - justify-self: start
        - padding-bottom: 4px
      img_cell:
        - justify-content: start
        - align-items: center
        - margin: none
      custom_fields:
    custom_fields:
      umidita: |
        [[[
          return `<ha-icon
            icon="mdi:water-percent"
            style="width: 15px; height: 15px; color: lightblue;">
            </ha-icon><span>${states['sensor.umidita_salotto'].state} %</span>`
        ]]]
      temperatura: |
        [[[
          return `<ha-icon
            icon="mdi:thermometer"
            style="width: 15px; height: 15px; color: red;">
            </ha-icon><span>${states['sensor.temperatura_salotto'].state} %</span>`
        ]]]              
      stato: |
        [[[
         if (states['climate.termostato_soggiorno'].state === "off")
            return `<ha-icon
              icon="mdi:fire"
              style="width: 0px; height: 0px; color: white;">
              </ha-icon><br>`; 
         if (states['climate.termostato_soggiorno'].state === "heat")
            return `<ha-icon
              icon="mdi:fire"
              style="width: 25px; height: 25px; color: orange;">
              </ha-icon><br>`; 
         if (states['climate.termostato_soggiorno'].state === "cool")
            return `<ha-icon
              icon="mdi:snowflake"
              style="width: 25px; height: 25px; color: blue;">
              </ha-icon><br>`; 
         if (states['climate.termostato_soggiorno'].state === "auto")
            return `<ha-icon
              icon="mdi:autorenew"
              style="width: 25px; height: 25px; color: red;">
              </ha-icon><br><span>${states['climate.termostato_soggiorno'].state} °C</span>`; 
          
              ]]]    
        
